version: '2.3'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:9093
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
    depends_on:
      - zookeeper
    user: root
    volumes:
      - kafka-data:/bitnami/kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    networks:
      - kafka-network
  minio:
    image: bitnami/minio:latest
    container_name: minio
    user: root
    volumes:
      - minio-data:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: 'minio'
      MINIO_ROOT_PASSWORD: 'minio_pass'
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'
    entrypoint: sh -c "minio server /data"
    networks:
      - kafka-network
  mongodb:
    image: mongo
    container_name: mongo
    restart: always
    networks:
      - kafka-network
    ports:
      - 27017:27017
    volumes:
      - mongo-db:/data/db    
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
    networks:
      - kafka-network
    volumes:
      - mongo-db:/data/db 

networks:
  kafka-network:
    external: true 

volumes:
  minio-data: 
    external: true
  kafka-data:
  mongo-db:
